---
import type { GetStaticPaths } from "astro";
import Pagination from "../components/control/Pagination.astro";
import PostPage from "../components/PostPage.astro";
import { PAGE_SIZE } from "../constants/constants";
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { getSortedPosts } from "../utils/content-utils";
import { apiConfig } from "../config";

export const getStaticPaths = (async ({ paginate }) => {
	// 在构建时生成静态路径
	const allBlogPosts = await getSortedPosts();
	return paginate(allBlogPosts, { pageSize: PAGE_SIZE });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const len = page.data.length;
const apiBaseUrl = apiConfig.baseUrl;
---

<MainGridLayout>
    <PostPage page={page}></PostPage>
    <Pagination class="mx-auto onload-animation" page={page} style={`animation-delay: calc(var(--content-delay) + ${(len)*50}ms)`}></Pagination>
</MainGridLayout>

<script is:inline>
    // 客户端动态获取已发布文章列表
    (async function() {
        try {
            const debugMode = ${apiConfig.debug};
            const response = await fetch('${apiBaseUrl}/articles/published');
            
            if (response.ok) {
                const result = await response.json();
                
                if (result.success && result.data && result.data.length > 0) {
                    if (debugMode) {
                        console.log('成功从API获取已发布文章列表:', result.data.length, '篇文章');
                    }
                    
                    // 检查是否需要更新文章列表
                    const currentPostCount = document.querySelectorAll('.post-card').length;
                    if (result.data.length > currentPostCount || result.data.some(article => !Array.from(document.querySelectorAll('.post-card h2')).some(h2 => h2.textContent?.includes(article.title)))) {
                        // 通知用户有新文章
                        const notification = document.createElement('div');
                        notification.className = 'fixed bottom-4 right-4 bg-blue-500 text-white px-4 py-2 rounded-md shadow-lg z-50';
                        notification.textContent = '发现 ' + result.data.length + ' 篇新文章，刷新页面查看更新内容';
                        document.body.appendChild(notification);
                        
                        // 3秒后自动移除通知
                        setTimeout(() => {
                            notification.remove();
                        }, 3000);
                    }
                }
            }
        } catch (error) {
            if (${apiConfig.debug}) {
                console.warn('获取已发布文章列表失败:', error);
            }
            // 忽略错误，使用静态生成的文章列表
        }
    })();
</script>