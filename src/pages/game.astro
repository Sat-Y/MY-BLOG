---
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import MainGridLayout from "../layouts/MainGridLayout.astro";

// 游戏数据
const gameList = [
	{
		title: "The Legend of Zelda: Tears of the Kingdom",
		status: "completed",
		rating: 9.5,
		cover: "assets/anime/cmmn.webp",
		description: "探索广阔的海拉鲁大陆和天空岛屿，使用新能力创造无限可能。",
		year: "2023",
		platform: "Nintendo Switch",
		genre: ["Action", "Adventure", "Open World"],
		highestAchievement: "100% 完成度",
	},
	{
		title: "The Legend of Zelda: Tears of the Kingdom",
		status: "completed",
		rating: 9.5,
		cover: "assets/anime/cmmn.webp",
		description: "探索广阔的海拉鲁大陆和天空岛屿，使用新能力创造无限可能。",
		year: "2023",
		platform: "Nintendo Switch",
		genre: ["Action", "Adventure", "Open World"],
		highestAchievement: "100% 完成度",
	},
];

// 获取状态的翻译文本和样式
function getStatusInfo(status: string) {
	switch (status) {
		case "playing":
			return {
				text: i18n(I18nKey.gameStatusPlaying),
				class:
					"bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300",
				icon: "🎮",
			};
		case "completed":
			return {
				text: i18n(I18nKey.gameStatusCompleted),
				class:
					"bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300",
				icon: "🏆",
			};
		case "planned":
			return {
				text: i18n(I18nKey.gameStatusPlanned),
				class:
					"bg-amber-100 text-amber-700 dark:bg-amber-900/30 dark:text-amber-300",
				icon: "📝",
			};
		default:
			return {
				text: status,
				class: "bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300",
				icon: "?",
			};
	}
}

// 计算统计数据
const stats = {
	total: gameList.length,
	playing: gameList.filter((game) => game.status === "playing").length,
	completed: gameList.filter((game) => game.status === "completed").length,
	highestAchievement: "100%", // 示例最高成就
};
---

<MainGridLayout title={i18n(I18nKey.game)} description={i18n(I18nKey.gameSubtitle)}>
	<div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
		<div class="card-base z-10 px-9 py-6 relative w-full">
			<!-- 页面标题 -->
			<div class="relative w-full mb-8">
				<div class="mb-6">
					<h1 class="text-4xl font-bold text-black/90 dark:text-white/90 mb-2">{i18n(I18nKey.gameTitle)}</h1>
					<p class="text-black/75 dark:text-white/75">{i18n(I18nKey.gameSubtitle)}</p>
				</div>
				
				<!-- 统计卡片 -->
				<div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
					<div class="bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">🎮</div>
							<div>
								<div class="text-2xl font-bold text-blue-600 dark:text-blue-400">{stats.total}</div>
								<div class="text-sm text-blue-600/70 dark:text-blue-400/70">{i18n(I18nKey.gameTotal)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">🎯</div>
							<div>
								<div class="text-2xl font-bold text-green-600 dark:text-green-400">{stats.playing}</div>
								<div class="text-sm text-green-600/70 dark:text-green-400/70">{i18n(I18nKey.gamePlaying)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">🏆</div>
							<div>
								<div class="text-2xl font-bold text-purple-600 dark:text-purple-400">{stats.completed}</div>
								<div class="text-sm text-purple-600/70 dark:text-purple-400/70">{i18n(I18nKey.gameCompleted)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">🌟</div>
							<div>
								<div class="text-2xl font-bold text-orange-600 dark:text-orange-400">{stats.highestAchievement}</div>
								<div class="text-sm text-orange-600/70 dark:text-orange-400/70">{i18n(I18nKey.gameAvgRating)}</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- 游戏列表 -->
			<div class="mb-8">
				<h2 class="text-2xl font-bold text-black/90 dark:text-white/90 mb-4">
					{i18n(I18nKey.gameList)}
				</h2>
				<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
					{gameList.map(game => {
						const statusInfo = getStatusInfo(game.status);
						 
						return (
							<div class="group relative bg-[var(--card-bg)] border border-[var(--line-divider)] rounded-[var(--radius-large)] overflow-hidden transition-all duration-300 hover:shadow-lg">
								<!-- 左右结构布局 -->
								<div class="flex flex-col md:flex-row">
									<!-- 左侧图片区域 -->
									<div class="relative w-full md:w-2/5 aspect-video md:aspect-auto">
										<ImageWrapper 
											src={game.cover} 
											alt={game.title}
											class="w-full h-full object-cover"
										/>
										 
										<!-- 状态标签 -->
										<div class={`absolute top-2 left-2 px-2 py-1 rounded-md text-xs font-medium ${statusInfo.class}`}>
											<span class="mr-1">{statusInfo.icon}</span>
											<span>{statusInfo.text}</span>
										</div>
										 
										<!-- 评分 -->
										<div class="absolute top-2 right-2 bg-black/70 text-white px-2 py-1 rounded-md text-xs font-medium flex items-center gap-1">
											<svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
												<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
											</svg>
											<span>{game.rating}</span>
										</div>
									</div>
									 
									<!-- 右侧内容区域 -->
									<div class="w-full md:w-3/5 p-4 flex flex-col justify-between">
										<div>
											<h3 class="text-lg font-bold text-black/90 dark:text-white/90 mb-2">{game.title}</h3>
											<p class="text-black/70 dark:text-white/70 mb-4 line-clamp-3">{game.description}</p>
											 
											<!-- 详细信息 -->
											<div class="grid grid-cols-2 gap-3 mb-4">
												<div class="flex flex-col">
													<span class="text-black/50 dark:text-white/50 text-sm mb-1">{i18n(I18nKey.gameYear)}</span>
													<span class="text-black/90 dark:text-white/90">{game.year}</span>
												</div>
												<div class="flex flex-col">
													<span class="text-black/50 dark:text-white/50 text-sm mb-1">{i18n(I18nKey.gamePlatform)}</span>
													<span class="text-black/90 dark:text-white/90">{game.platform}</span>
												</div>
												<div class="flex flex-col">
													<span class="text-black/50 dark:text-white/50 text-sm mb-1">{i18n(I18nKey.gameAvgRating)}</span>
													<span class="text-black/90 dark:text-white/90">{game.highestAchievement}</span>
												</div>
											</div>
										</div>
										 
										<!-- 游戏标签 -->
										<div class="flex flex-wrap gap-2">
											{game.genre.map(g => (
												<span class="px-2 py-1 bg-[var(--btn-regular-bg)] text-black/80 dark:text-white/80 rounded text-sm">{g}</span>
											))}
										</div>
									</div>
								</div>
							</div>
						);
					})}
				</div>
			</div>
		</div>
	</div>
</MainGridLayout>